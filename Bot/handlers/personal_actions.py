from random import randrange
from aiogram.utils.markdown import link


from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from aiogram import types
from aiogram import dispatcher
from aiogram.utils.markdown import hide_link

from dispatcher import dp, bot
import config
import re
from keyboards.client_kb import kb_inAnk, kb_fromAnk, kb_lookAnk, kb_sogl, urlkb
from bot import BotDB
import json
import string


lastank = 0

class FSMstart(StatesGroup):
    starting = State()
    helouing = State()

# –ö–õ–ê–°–° –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ê–ù–ö–ï–¢–´
class FSMreg(StatesGroup):
    name = State()
    age = State()
    photo = State()
    spheres = State()
    desqription = State()
    education = State()
    hobbie = State()

class FSMlike(StatesGroup):
    fLike = State()

class FSMlook(StatesGroup):
    looking = State()
    messaging = State()

#@dp.message_handler(commands = "pp")
#async def asd(message: types.Message):
#    await FSMlike.fLike.set()
#    await message.answer("–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –∫–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å! ")
#    await message.answer("–ê–Ω–∫–µ—Ç–∞ –∫–æ–≥–æ-—Ç–æ", reply_markup=kb_inAnk)


#@dp.message_handler(state=FSMlike.fLike)
#async def getADS(message: types.Message, state: FSMlike):
#    if message.text == "ü§ù":
#        await message.answer("–•–æ—Ä–æ—à–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –≤–∞–º!(%s)", message.from_user.full_name)
#        messageCap_template = """–•–æ—Ä–æ—à–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –≤–∞–º! {name}"""
#        lastankasd = BotDB.getlastankin(message.from_user.id)
#        foruser = BotDB.getRecFrend(message.from_user.id, lastankasd)
#        messageCap = messageCap_template.format(name=message.from_user.full_name)
#        await bot.send_message(foruser, messageCap)
#
#    if message.text == "üëé":
#        await message.answer("–ü–æ–∏—â–µ–º –µ—â—ë –ª—é–¥–µ–π")
#    await state.finish()
#    await FSMlook.looking.set()
#    await message.answer("–ß—å—è-—Ç–æ –∞–Ω–∫–µ—Ç–∞", reply_markup=kb_lookAnk)

# –•–≠–ù–î–õ–ï–† –î–õ–Ø –û–¢–ú–ï–ù–´
@dp.message_handler(state="*", commands = "–æ—Ç–º–µ–Ω–∞")
@dp.message_handler(Text(equals='–û—Ç–º–µ–Ω–∞', ignore_case = True), state="*")
async def cancelHandler(message: types.Message, state: FSMreg):
    curent_state = await state.get_state()
    if curent_state is None:
        return
    await state.finish()
    await message.reply("–û–ö")
async def cancelHandler2(message: types.Message, state: FSMlike):
    curent_state = await state.get_state()
    if curent_state is None:
        return
    await state.finish()
    await message.reply("–û–ö")

@dp.message_handler(state=FSMlike.fLike)
@dp.message_handler(Text(equals="ü§ù"), state=FSMlook.looking)
@dp.message_handler(Text(equals="üëé"), state=FSMlook.looking)
@dp.message_handler(Text(equals="–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã"), state=None)
async def lookAnks(message: types.Message):
    if message.text == "ü§ù":
        lastankasd = BotDB.getlastankin(message.from_user.id)
        if(not BotDB.getfrengrecuest(lastankasd, message.from_user.id)):
            #–º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è

            feta = BotDB.tofriend(message.from_user.id, lastankasd)

            name = feta [2]
            age = feta [3]
            spheres = feta [4]
            desqription = feta [5]
            photo = feta [6]
            education = feta [8]
            hobbie = feta [9]
            messageCap_template = """{name}, {age}\nHard skills: {spheres}\nSoft skills: {desqription}\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {education}\n–•–æ–±–±–∏: {hobbie}"""
            messageCap = messageCap_template.format(name=name, age=age, spheres=spheres, desqription=desqription, education=education, hobbie=hobbie)


            tsel_user = BotDB.unget_user_id(lastankasd)
            await bot.send_message(tsel_user, "–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –∫–æ–º—É-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å!")

            state = dp.current_state(chat=tsel_user, user=tsel_user)
            await state.set_state(FSMlook.looking)


            try:
                await bot.send_photo(tsel_user, photo, messageCap,     reply_markup=kb_inAnk)
            except:
                print("–Ω–µ —Ä–æ–±–∏—Ç —Ñ–æ—Ç–æ")
            try:
                await bot.send_video(tsel_user, photo, caption = messageCap,     reply_markup=kb_inAnk)
            except:
                print("–Ω–µ —Ä–æ–±–∏—Ç –≤–∏–¥–µ–æ")

            BotDB.setlastankin(BotDB.unget_user_id(lastankasd), BotDB.get_user_id(message.from_user.id))

            await message.reply('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥—Ä—É–∂–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞')
        else:
            #–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –¥—Ä
            await message.answer("–í–∞—à–µ –∂–µ–ª–∞–Ω–∏–µ –¥—Ä—É–∂–∏—Ç—å –≤–∑–∞–∏–º–Ω–æ!")
            messageCap = hide_link('tg://user?id=753623377')

            #messageCap_template = '<a href="tg://user?id={user_id}">–ò–º—è</a>'
            #messageCap = messageCap_template.format(user_id = BotDB.unget_user_id(lastankasd))
            messageCap_template = '@{username}'
            messageCap = messageCap_template.format(username = BotDB.getUser_name(lastankasd))

            await message.answer(messageCap)
            await message.answer('–•–æ—Ä–æ—à–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –≤–∞–º!')
            #messageCap_template = """–•–æ—Ä–æ—à–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è –≤–∞–º! {name}"""
            BotDB.getRecFrend(message.from_user.id, lastankasd)
            #messageCap = messageCap_template.format(name=message.from_user.full_name)
            #await bot.send_message(foruser, messageCap)

    await FSMlook.looking.set()

    feta = BotDB.finf_ank(message.from_user.id, message)
    long = len(feta)
    ank = randrange(0, long)

    BotDB.setlastankin(message.from_user.id, feta[ank][1])
    name = feta [ank][2]
    age = feta [ank][3]
    spheres = feta [ank][4]
    desqription = feta [ank][5]
    photo = feta [ank][6]
    education = feta [ank][8]
    hobbie = feta [ank][9]


    messageCap_template = """{name}, {age}\nHard skills: {spheres}\nSoft skills: {desqription}\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {education}\n–•–æ–±–±–∏: {hobbie}"""
    messageCap = messageCap_template.format(name=name, age=age, spheres=spheres, desqription=desqription, education=education, hobbie=hobbie)

    try:
        await bot.send_photo(message.from_user.id, photo, messageCap,     reply_markup=kb_lookAnk)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç —Ñ–æ—Ç–æ")
    try:
        await bot.send_video(message.from_user.id, photo, caption = messageCap,     reply_markup=kb_lookAnk)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç –≤–∏–¥–µ–æ")



#@dp.message_handler(Text(equals="üíå"), state=FSMlook.looking)
#async def looPerskAnk(message: types.Message, state: FSMlook):
#    await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', reply_markup=None)
#    await FSMlook.next()



#@dp.message_handler(state=FSMlook.messaging)
#async def read(message: types.Message):
#    if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.text.split(' ')} \
#            .intersection(set(json.load(open('NL/nl.json')))) != set():
#        await message.reply('–ú–∞—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!')
#        await message.delete()
#    else:
#        await message.reply('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞')
#        await FSMlook.looking.set()
#        await message.answer("–ß—å—è-—Ç–æ –∞–Ω–∫–µ—Ç–∞", reply_markup=kb_lookAnk)


#@dp.message_handler(Text(equals="üëé"), state=FSMlook.looking)
#async def looPerskAnk(message: types.Message, state=FSMlook):
#    #–°–ª–µ–¥—É—â–∞—è –∞–Ω–∫–µ—Ç–∞
#    await message.answer("–ß—å—è-—Ç–æ –∞–Ω–∫–µ—Ç–∞", reply_markup=kb_lookAnk)

@dp.message_handler(Text(equals="üí§"), state=FSMlook.looking)
async def looPerskAnk(message: types.Message, state=FSMlook):
    await message.answer("–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:", reply_markup=kb_fromAnk)
    try:
        await BotDB.get_ank(message.from_user.id, message)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç —Ñ–æ—Ç–æ")
    try:
        await BotDB.get_ankv(message.from_user.id, message)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç –≤–∏–¥–µ–æ")
    await state.finish()


# –•–≠–ù–î–õ–ï–†–´ –î–õ–Ø –°–û–°–¢–û–Ø–ù–ò–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ê–ù–ö–ï–¢–´
@dp.message_handler(Text(equals="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ"), state=None)
async def st(message: types.Message):
    await FSMreg.name.set()
    await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

@dp.message_handler(state=FSMreg.name)
async def getName(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['name'] = message.text
    await FSMreg.next()
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

@dp.message_handler(state=FSMreg.age)
async def getAge(message: types.Message, state: FSMreg):
    try:
        if int(message.text) < 16:
            await message.answer("–¢–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 16-—Ç–∏ –ª–µ—Ç")
        if int(message.text) > 122:
            await message.answer("–¢–µ–±–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –ª–µ—Ç, —á–µ–º —Å—Ç–∞—Ä–µ–π—à–∏–º –∏–∑ –∫–æ–≥–¥–∞-–ª–∏–±–æ –∂–∏–≤—à–∏—Ö –Ω–∞ –ó–µ–º–ª–µ –ª—é–¥–µ–π!")
        else:
            if int(message.text) >= 16:
                async with state.proxy() as data:
                    data['age'] = message.text
                await FSMreg.next()
                await message.answer("–ü—Ä–∏—à–ª–∏ —Å–≤–æ—ë —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ")
    except:
        await message.answer("–í–≤–µ–¥–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç")

@dp.message_handler(content_types=['video'], state=FSMreg.photo)
async def getPhoto(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['photo'] = message.video.file_id
    await FSMreg.next()
    await message.answer("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å? (hard skills)")


@dp.message_handler(content_types=['photo'], state=FSMreg.photo)
async def getPhoto(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['photo'] = message.photo[0].file_id
    await FSMreg.next()
    await message.answer("–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å? (hard skills)")

@dp.message_handler(state=FSMreg.photo)
async def getPhoto(message: types.Message, state: FSMreg):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å ")


@dp.message_handler(state=FSMreg.spheres)
async def getSpheres(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['spheres'] = message.text
    await FSMreg.next()
    await message.answer("–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–∏—Ö Soft skills")






@dp.message_handler(state=FSMreg.desqription)
async def getDesqr(message: types.Message, state: FSMreg):
    mesamesa = message
    async with state.proxy() as data:
        data['desqription'] = message.text
    await FSMreg.next()
    await message.answer("–ö–∞–∫–æ–π —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?")


@dp.message_handler(state=FSMreg.education)
async def getSpheres(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['education'] = message.text
    await FSMreg.next()
    await message.answer("–ö–∞–∫–∏–µ —Ç–≤–æ–∏ —Ö–æ–±–±–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã?")


@dp.message_handler(state=FSMreg.hobbie)
async def getSpheres(message: types.Message, state: FSMreg):
    async with state.proxy() as data:
        data['hobbie'] = message.text

    await message.answer("–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:")
    #await message.answer(data['name'], data['age'], data['spheres'], data['desqription'])
    #await message.answer("–ò–º—è", data['name'], ", ", data['age'], " –ª–µ—Ç. \n ", data['spheres'], "\n", data['desqription'])
    BotDB.add_record(message.from_user.id, data['name'], data['age'], data['spheres'], data['desqription'], data['photo'],data['education'],data['hobbie'] )
    name = data['name']
    age = data['age']
    spheres = data['spheres']
    desqription = data['desqription']
    education = data['education']
    hobbie = data['hobbie']
    messageCap_template = """{name}, {age}\nHard skills: {spheres}\nSoft skills: {desqription}\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {education}\n–•–æ–±–±–∏: {hobbie}"""
    messageCap = messageCap_template.format(name=name, age=age, spheres=spheres, desqription=desqription, education=education, hobbie=hobbie)

    try:
        await bot.send_photo(message.from_user.id, data['photo'], messageCap)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç —Ñ–æ—Ç–æ")
    try:
        await bot.send_video(message.from_user.id, data['photo'], caption = messageCap)
    except:
        print("–Ω–µ —Ä–æ–±–∏—Ç –≤–∏–¥–µ–æ")


    await message.answer("–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!", reply_markup=kb_fromAnk)
    await state.finish()




# –•–≠–ù–î–õ–ï–† –°–¢–ê–†–¢–ê
@dp.message_handler(commands = "start")
async def helouing(message: types.Message):
    await FSMstart.starting.set()
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø —É–º–Ω—ã–π –±–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –Ω–∞ Python. "
                                                         "–ú–æ—è —Ü–µ–ª—å - —Å–≤–µ—Å—Ç–∏ —Ç–µ–±—è —Å –Ω—É–∂–Ω—ã–º–∏ –ª—é–¥—å–º–∏.", reply_markup=kb_sogl)
    await message.answer("–î–ª—è –Ω–∞—á–∞–ª–∞, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", reply_markup=urlkb)
    await FSMstart.next()

@dp.message_handler(Text(equals="–ü—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ"),state=FSMstart.helouing)
async def start(message: types.Message, state = FSMstart):
    chat_id = message.from_user.username
    BotDB.user_take_polici(message.from_user.id, chat_id)
    await state.finish()
    await FSMreg.name.set()
    await message.answer("–¢–µ–ø–µ—Ä—å, –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

# –•–≠–ù–î–õ–ï–† –õ–Æ–ë–û–ì–û –í–í–û–î–ê
@dp.message_handler()
async def read(message: types.Message):
        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.text.split(' ')}\
            .intersection(set(json.load(open('NL/nl.json')))) != set():
            await message.reply('–ú–∞—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!')
            await message.delete()

